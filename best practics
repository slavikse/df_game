
------------------------ РАЗМЕТКА ---------------------------

@include('home/home.html') для логической вставки разметки как модулей
Минимальная вложенность. Семантические теги: header, nav, section, aside, footer
img[width height alt], a[title]
template для отложенной загрузки модулей
пробел: &#32;

PICTURE: frontender.info/responsive-images
Объяснение: picture + source + srcset = picturefill
если webp поддерживается, то первый source отобразит картинку для ширины большей 500px
webp не поддерживается, то второй source отобразит картинку для ширины большей 500px
если все правила выше проигнорированы, то третий source отобразит картинку если поддеживается webp
и фолбек в случае, если ширина меньше 500px и webp не поддерживается, отобразит обычный jpg

Простое использование:
<picture>
  <source srcset="image/meet_pers1.webp" type="image/webp">
  <img src="image/meet_pers2.jpg" alt="...">
</picture>

Для разных экранов:
<picture>
  <source media="(min-width: 500px)" srcset="image/meet_pers1.webp" type="image/webp">
  <source media="(min-width: 500px)" srcset="image/meet_pers1.jpg">
  <source srcset="image/meet_pers2.webp" type="image/webp">
  <img src="image/meet_pers2.jpg" alt="...">
</picture>

Для двойной плотности:
<picture>
  <source
    media="(min-width: 500px)"
    srcset="image/meet_pers1.webp 1x,
            image/meet_pers1@2x.webp 2x"
    type="image/webp">
  <source
    media="(min-width: 500px)"
    srcset="image/meet_pers1.jpg,
            image/meet_pers1@2x.jpg 2x">
  <source
    srcset="image/meet_pers2.webp 1x,
            image/meet_pers2@2x.webp 2x"
    type="image/webp">
  <img
    src="image/meet_pers2.jpg" alt="..."
    srcset="image/meet_pers2@2x.jpg 2x">
</picture>

<meta name='application-name' content='Application Name'>
<meta http-equiv="x-dns-prefetch-control" content="on">
<link rel="dns-prefetch" href="https://URI.com">
<link rel="prefetch" href="secondary.js">

Social: Facebook / Open Graph
<meta property="fb:ADD_ID" content="123456789">
<meta property="og:url" content="http://site.com">
<meta property="og:type" content="website">
<meta property="og:title" content="Заголовок">
<meta property="og:image" content="https://">
<meta property="og:image:width" content="604">
<meta property="og:image:height" content="338">
<meta property="og:description" content="Описание">
<meta property="og:site_name" content="Название сайта">
<meta property="og:locale" content="ru_RU">
<meta property="article:author" content="">

Twitter
<meta name="twitter:card" content="summary">
<meta name="twitter:site" content="@site_account">
<meta name="twitter:creator" content="@individual_account">
<meta name="twitter:url" content="https://example.com/page.html">
<meta name="twitter:title" content="Content Title">
<meta name="twitter:description" content="less than 200 characters">
<meta name="twitter:image" content="https://example.com/image.jpg">


--------------------------- СТИЛИ ----------------------------

Сортировка стилей:
  Позиционирование
  Блочная модель
  Оформление
  Остальное

Рекомендации:
  Mobile first! Указывать основной шрифт в body один раз и для всех
  Каскад: .block { .elem }. Вложенность <= 2. Поиск справа налево
  will-change (только для сложной анимации): переносит в композитный слой и обрабатывает на GPU
  Layout: раскладка (width, left, ...), дорогая операция
  Paint: отрисовка (color, opacity, ...), дешевая операция
  Composite: компоновка, самая дешевая операция
  Opacity, transform: самые дешевые операции
  Псевдоклассы только для декораций

Ширины экранов (основано на bstp4):
  xs = 544px
  sm = 768px
  md = 992px
  lg = 1200px

Responsive background image:
  .home-bg {
    background: url("image/home_bg_mobile.jpg") 50% 50% / cover no-repeat;

    @media (544px <= width <= 992px) {
      background-image: url("image/home_bg_tablet.jpg");
    }

    @media (width > 992px) {
      background-image: url("image/home_bg.jpg");
    }
  }

  @media (device-pixel-ratio: 2) {
    .image {
      background-image: url(image@2x.png);
    }
  }


--------------------------- СКРИПТЫ ---------------------------

Слабая связность. Чистые функции. Вложенность <= 2. Комментирование неочевидного кода
Сначала код, функции по мере использования в коде - ниже
Import для вставки кода. Import from / export для вызова функции
Объединять манипуляции с DOM. documentFragment. $ в начале имени найденной ноды
Кэшировать. Вычисляемые стили вызывают перерасчет. Не переопределять типы
raf для манипуляций в DOM. Ответ на действие < ~16.6ms
new FormData(document.forms.person) serialize данных из формы по name
console.time/End для тестирования производительности функций
transitionEnd


-------------- Спека для martyr по переходу на http2 ----------

Поддержка http2 > 76%: caniuse.com/#search=http2
Модуль содержит в себе все необходимые ему ресурсы
Ускорение рендеринга страницы блоками по мере загрузки стилей, скоро во всех браузерах...
Пример:
  <section class="module">
    <link href="module.css" rel="stylesheet">
    ... разметка ...
    <script async src="module.js"></script>
  </section>
